//
//  Patterns for appointment events
//

pattern set appoint;

appoint     := appoint-act | appoint-pass | appoint-nom | appoint-are |
                appoint-coma | appoint-is-as;

// pattern for active verb phrase:  appointed <person> as <position>

appoint-act := [constit cat=vgroup pa=[head?isa(cAppoint)]]
           [constit cat=ngroup]:Person age?
           ("as" | "to" [constit cat=ngroup pa=[head=position]] "of" |
            "to" "become")
                   [constit cat=ngroup]:Position+;

// pattern for passive clause:  <person> was appointed as <position>

appoint-pass    := [constit cat=ngroup]:Person age?
           [constit cat=vgroup-pass pa=[head?isa(cAppoint)]]
           ("as" | "to" [constit cat=ngroup pa=[head=position]] "of"  |
            "to" "become")?
                   [constit cat=ngroup]:Position;

// pattern for nominalization:  appointment of <person> as <position>

appoint-nom := [constit cat=ngroup pa=[head?isa(cAppointment)]] "of"
           [constit cat=ngroup]:Person age?
           //  overgeneralize:  it's "appointment as" / "promotion to"
           ("as" | "to" [constit cat=ngroup pa=[head=position]] "of"  |
            "to" "become" | "to") 
                   [constit cat=ngroup]:Position;

// pattern for Person is/are position

appoint-are := [constit cat=ngroup]:Person age? ("are" | "is")
                [constit cat=ngroup pa=[head=position]];

// Snape is appointed Position
appoint-is-as := [constit cat=ngroup]:Person age? ("are" | "is")
                    [constit cat=ngroup]:Position;

// Appointed NAME POSITION
appoint-name-pos := [constit cat=ngroup]:Person age? [constit cat=ngroup]:Position;

appoint-coma := [constit cat=ngroup]:Person "," [constit cat=ngroup]:Position+;
// allow , age , after a person's name

age         := ","  [integer] ",";


// write out person and position to standard output

when appoint    write "Appointed " + Person + " as " + Position;
